name: Deploy Databricks

on: 
  workflow_dispatch:
    inputs:
      deploy:
        type: boolean
        default: true
      environment:
        type: string
        default: dev

  repository_dispatch:
    types:
      - manual-trigger-mytest
      - manual-trigger-all

jobs:
  first-job:
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        run: echo "first job"

  auto-approve:
    needs: first-job
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        run: |
          ENV_IDS=$(curl -s -H "Authorization: Bearer ${{ secrets.MY_SECRET }}" "https://api.github.com/repos/${{ github.repository }}/environments" | jq -r ".environments[].id")
          echo $ENV_IDS
          url="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/pending_deployments"
          body='{
            "environment_ids": [ $ENV_IDS ],
            "state": "approved",
            "comment": "Auto-approved for automation"
          }'
          curl -X POST -H "Authorization: Bearer ${{ secrets.MY_SECRET }}" -H "Content-Type: application/json" -d "$body" "$url"

  plan-stage:
    needs: first-job
    runs-on: ubuntu-latest
    environment:
      name: "production"
    steps:
    - uses: actions/checkout@v1
    - name: step 1
      run: |
        echo "repository_dispatch triggered"

    - name: step2
      # if: github.event.action == "YOUR_EVENT_TYPE"
      run: |
        echo "repository_dispatch triggered"

    - name: step 3
      # if: github.event.action == "YOUR_EVENT_TYPE"
      run: |
        echo "repository_dispatch triggered"        

  approve-stage:
    needs: plan-stage
    runs-on: ubuntu-latest
    environment:
      name: "production"
    steps:
    - uses: actions/checkout@v1
    - name: step 1
      run: |
        echo "repository_dispatch triggered"

    - name: step2
      # if: github.event.action == "YOUR_EVENT_TYPE"
      run: |
        echo "repository_dispatch triggered"

    - name: step 3
      # if: github.event.action == "YOUR_EVENT_TYPE"
      run: |
        echo "repository_dispatch triggered"        
